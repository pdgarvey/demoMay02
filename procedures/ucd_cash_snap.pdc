CREATE OR REPLACE PROCEDURE "ADVANCE"."UCD_CASH_SNAP" (i_fy VARCHAR2, i_month VARCHAR2)
AS

-- Parameters

mon_beg_date		DATE;
mon_end_date		DATE;
yr_beg_date		DATE;
yr_end_date		DATE;
rec_cnt			NUMBER(10);
beg_amt			NUMBER(14,2);
end_amt			NUMBER(14,2);
amt_level		NUMBER(2,0);
v_spouse_id		VARCHAR2(10);
v_gcm			VARCHAR2(1);
v_mqy_type		VARCHAR2(1);
v_mqy_period		NUMBER(2,0);
v_descr			VARCHAR2(24);
v_acct			VARCHAR2(16);
v_fund			VARCHAR2(10);
v_school		VARCHAR2(4);
v_amt			NUMBER(14,2);
v_prim_amt		NUMBER(14,2);
v_snap_month		NUMBER(2,0);
v_qtr			NUMBER(2,0);
v_month			NUMBER(2,0);
v_payment_sort		NUMBER(2,0);
v_sysdate		DATE;
v_pmt_ind		VARCHAR2(1);
v_gift_cash_ind		VARCHAR2(1);
-- JF 07/05 new column
v_npv_amt	NUMBER(14,2);


CURSOR gm_cursor IS
SELECT	--get Gift info
	g.gift_year_of_giving give_yr,
	'G' gcm,
decode(
  substr(gift_date_of_record,4,3),'JAN', 1, 'FEB', 2, 'MAR', 3, 'APR', 4,
  'MAY', 5, 'JUN', 6, 'JUL', 7, 'AUG', 8, 'SEP', 9, 'OCT', 10, 'NOV', 11,
  'DEC', 12, 99) month,
	g.gift_donor_id id,
	e.record_type_code etype,
	g.gift_date_of_record rec_date,
	g.gift_receipt_number receipt,
	g.gift_associated_allocation alloc_code,
	g.gift_appeal appeal,
	g.gift_associated_campaign campaign,
	t.transaction_type_code trans_type,
--  g.pledge_payment_ind pmt_ind,
	t.pledge_payment_ind pmt_ind,
	g.gift_payment_type payment_type,
	g.gift_associated_anonymous anon_ind,
	g.gift_associated_amount amt,
	g.gift_associated_amount camt,
	t.gift_ind  gift_cash_ind,
	a.agency agency,
	a.campus campus,
	a.alloc_school school,
	a.alloc_dept_code dept,
	a.alloc_division division,
	a.fund_name fund,
	a.alloc_purpose purpose,
	a.restrict_code restrict,
-- JF 07/05
-- add column for PG, to use npv column in primary_gift
  decode(g.gift_transaction_type,'PG',decode(g.gift_associated_code,'P',
         pg.prim_gift_npv_amount,0),g.gift_associated_amount) npv_amt
FROM	gift g, allocation a, tms_transaction_type t, entity e, primary_gift pg
where g.gift_year_of_giving = i_fy
and   g.gift_date_of_record >= yr_beg_date
and   g.gift_date_of_record <= mon_end_date
and   g.gift_associated_amount > 0
and t.pledge_payment_ind  <> 'Y'
and t.gift_ind = 'Y'
and g.gift_associated_allocation = a.allocation_code(+)
and g.gift_transaction_type = t.transaction_type_code
and g.gift_donor_id = e.id_number
and g.gift_receipt_number = pg.prim_gift_receipt_number

UNION ALL

SELECT	--get cash info
	g.gift_year_of_giving give_yr,
	'C' gcm,
decode(
  substr(gift_date_of_record,4,3),'JAN', 1, 'FEB', 2, 'MAR', 3, 'APR', 4,
  'MAY', 5, 'JUN', 6, 'JUL', 7, 'AUG', 8, 'SEP', 9, 'OCT', 10, 'NOV', 11,
  'DEC', 12, 99) month,
	g.gift_donor_id id,
	e.record_type_code etype,
	g.gift_date_of_record rec_date,
	g.gift_receipt_number receipt,
	g.gift_associated_allocation alloc_code,
	g.gift_appeal appeal,
	g.gift_associated_campaign campaign,
	t.transaction_type_code trans_type,
--  g.pledge_payment_ind pmt_ind,
	t.pledge_payment_ind pmt_ind,
	g.gift_payment_type payment_type,
	g.gift_associated_anonymous anon_ind,
	g.gift_associated_amount amt,
	g.gift_associated_amount camt,
	t.gift_ind  gift_cash_ind,
	a.agency agency,
	a.campus campus,
	a.alloc_school school,
	a.alloc_dept_code dept,
	a.alloc_division division,
	a.fund_name fund,
	a.alloc_purpose purpose,
	a.restrict_code restrict,
-- JF 07/05
-- add column for PG, to use npv column in primary_gift
  decode(g.gift_transaction_type,'PG',decode(g.gift_associated_code,'P',
         pg.prim_gift_npv_amount,0),g.gift_associated_amount) npv_amt
FROM	gift g, allocation a, tms_transaction_type t, entity e, primary_gift pg
where g.gift_year_of_giving = i_fy
and   g.gift_date_of_record >= yr_beg_date
and   g.gift_date_of_record <= mon_end_date
and   g.gift_associated_amount > 0
and   t.pledge_payment_ind  = 'Y'
and   t.gift_ind = 'N'
and   g.gift_associated_allocation = a.allocation_code(+)
and   g.gift_transaction_type = t.transaction_type_code
and   g.gift_donor_id = e.id_number
and g.gift_receipt_number = pg.prim_gift_receipt_number

UNION ALL

SELECT	--get Matching Gift info
	m.match_gift_year_of_giving give_yr,
	'M' gcm,
decode(
substr(match_gift_date_of_record,4,3),'JAN', 1, 'FEB', 2, 'MAR', 3, 'APR', 4,
'MAY', 5, 'JUN', 6, 'JUL', 7, 'AUG', 8, 'SEP', 9, 'OCT', 10, 'NOV', 11, 'DEC', 12, 99) month,

	m.match_gift_company_id id,
	e.record_type_code etype,
	m.match_gift_date_of_record rec_date,
	m.match_gift_receipt_number receipt,
	m.match_gift_allocation_name alloc_code,
	' ' appeal,
	m.match_gift_campaign campaign,
	' ' trans_type,
	' ' pmt_ind,
	decode(m.match_payment_type, ' ', 'C', m.match_payment_type) payment_type,
	' ' anon_ind,
	m.match_gift_amount amt,
	0.0 camt,
	'Y' gift_cash_ind,
	a.agency agency,
	a.campus campus,
	a.alloc_school school,
	a.alloc_dept_code dept,
	a.alloc_division division,
	a.fund_name fund,
	a.alloc_purpose purpose,
	a.restrict_code restrict,
-- JF 07/05
-- add column for PG, to use npv column in primary_gift
  m.match_gift_amount npv_amt
FROM	matching_gift m, allocation a, entity e
where m.match_gift_year_of_giving = i_fy
and m.match_gift_date_of_record  >= yr_beg_date
and m.match_gift_date_of_record  <= mon_end_date
and m.match_gift_allocation_name = allocation_code(+)
and m.match_gift_company_id = e.id_number
;

-- @h:\ucd_bsr\snapshot\st_procs\ucd_cash_snap
--**************************************************************************
BEGIN

SELECT trunc(sysdate) INTO v_sysdate FROM DUAL;

-- set snap_month value
SELECT decode(
  upper(i_month),'JAN', 1, 'FEB', 2, 'MAR', 3, 'APR', 4,
  'MAY', 5, 'JUN', 6, 'JUL', 7, 'AUG', 8, 'SEP', 9, 'OCT', 10, 'NOV', 11,
  'DEC', 12, 99) INTO v_snap_month FROM DUAL;

-- calculate date ranges
if v_snap_month >= 7 and v_snap_month <= 12 then
	SELECT to_date('01-' || i_month || '-' || to_char(to_number(i_fy)-1))
		INTO mon_beg_date FROM DUAL;
else
	SELECT to_date('01-' || i_month || '-' || i_fy)
		INTO mon_beg_date FROM DUAL;
end if;

SELECT add_months(mon_beg_date, 1) - 1
	INTO mon_end_date FROM DUAL;

SELECT to_date('01-JUL-' || to_char(to_number(i_fy)-1))
	INTO yr_beg_date FROM DUAL;

yr_end_date := mon_end_date;

-- @h:\ucd_bsr\snapshot\st_procs\det_summ
--**************************************************************************

-- delete records for the current snap month run.
DELETE FROM ucd_cash WHERE fyr = i_fy AND snap_month = v_snap_month;
COMMIT;

rec_cnt := 0;
FOR r IN gm_cursor
LOOP
	rec_cnt := rec_cnt + 1;
	if (rec_cnt mod 10000) = 0 then
		commit;
	end if;

-- set the quarter value
	v_qtr := 0;
	if v_snap_month = 9 and
	(r.month = 7 or r.month = 8 or r.month = 9) then
		v_qtr := 1;
	elsif v_snap_month = 12 and
	(r.month = 10 or r.month = 11 or r.month = 12) then
		v_qtr := 2;
	elsif v_snap_month = 3 and
	(r.month = 1 or r.month = 2 or r.month = 3) then
		v_qtr := 3;
	elsif v_snap_month = 6 and
	(r.month = 4 or r.month = 5 or r.month = 6) then
		v_qtr := 4;
	end if;

-- get primary amounts, spouse_id
	v_spouse_id := ' ';
	v_prim_amt := 0.00;
	if r.gcm = 'G' then
		select prim_gift_amount into v_prim_amt
		from primary_gift
		where prim_gift_receipt_number = r.receipt
		;
		select spouse_id_number into v_spouse_id
		from entity
		where id_number = r.id
		;
	elsif r.gcm = 'C' then
		select prim_gift_amount into v_prim_amt
		from primary_gift
		where prim_gift_receipt_number = r.receipt
		;
		select spouse_id_number into v_spouse_id
		from entity
		where id_number = r.id
		;
	else -- matching gift
		v_prim_amt := r.amt;
	end if;

	INSERT INTO ucd_cash
		(fyr, gcm, qtr, month, snap_month,
		donor_id, spouse_id, entity_type,
		date_of_record, receipt_numb,
		alloc_code, appeal, campaign,
		trans_type, pledge_pay_ind,
		gift_cash_ind, payment_type, anon_ind,
		dollar_amt, credit_amt, prim_dollar_amt,
		agency, campus,
		school, dept, division,
		fund_name, purpose, restrict,
		add_date, npv_amt
		)
	VALUES
		(r.give_yr, r.gcm, v_qtr, r.month, v_snap_month,
		r.id, v_spouse_id, r.etype,
		r.rec_date, r.receipt,
		r.alloc_code, r.appeal, r.campaign,
		r.trans_type, r.pmt_ind,
		r.gift_cash_ind, r.payment_type, r.anon_ind,
		r.amt, r.camt, v_prim_amt,
		r.agency, r.campus,
		r.school, r.dept, r.division,
		r.fund, r.purpose, r.restrict,
		v_sysdate, r.npv_amt
	);

END LOOP;

-- @h:\ucd_bsr\snapshot\cash\st_procs\ucd_cash_snap
--**************************************************************************
/*
OPEN RC1 FOR

SELECT fyr, snap_month, date_of_record, add_date, date1, date2
FROM	ucd_cash_snap
--WHERE	school = 'SOM'
--GROUP BY
;
*/
END;



 
/
  GRANT DEBUG ON "ADVANCE"."UCD_CASH_SNAP" TO "ADVROLE";
  GRANT EXECUTE ON "ADVANCE"."UCD_CASH_SNAP" TO "ADVROLE";
  GRANT EXECUTE ON "ADVANCE"."UCD_CASH_SNAP" TO PUBLIC;
